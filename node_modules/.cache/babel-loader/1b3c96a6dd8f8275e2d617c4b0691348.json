{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Color = void 0;\n\nvar math_1 = require(\"../systems/math\");\n/**\n * Represents a color consisting of RGB values. The components of it are\n * represented as integers in the range 0 to 255.\n *\n * @example\n * ```ts\n * const a = new Color(12, 59, 219);\n * const b = Color.fromHex(\"#ffa68d\");\n * const result = a.mix(b);\n * ```\n */\n\n\nvar Color =\n/** @class */\nfunction () {\n  /**\n   * Creates a new color instance from the specified RGB components.\n   */\n  function Color(r, g, b) {\n    this.values = new Float32Array(3);\n    this.rgb = [r, g, b];\n  }\n\n  Object.defineProperty(Color.prototype, \"r\", {\n    /**\n     * Returns the r-component of the color.\n     */\n    get: function () {\n      return this.values[0];\n    },\n\n    /**\n     * Modifies the r-component of the color.\n     * Note that this also floors the value.\n     */\n    set: function (value) {\n      this.values[0] = Math.floor(value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Color.prototype, \"g\", {\n    /**\n     * Returns the g-component of the color.\n     */\n    get: function () {\n      return this.values[1];\n    },\n\n    /**\n     * Modifies the g-component of the color.\n     * Note that this also floors the value.\n     */\n    set: function (value) {\n      this.values[1] = Math.floor(value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Color.prototype, \"b\", {\n    /**\n     * Returns the b-component of the color.\n     * Note that this also floors the value.\n     */\n    get: function () {\n      return this.values[2];\n    },\n\n    /**\n     * Modifies the b-component of the color.\n     */\n    set: function (value) {\n      this.values[2] = Math.floor(value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Color.prototype, \"rgb\", {\n    /**\n     * Returns the rgb-components of the color, bundled as a copied array.\n     */\n    get: function () {\n      return [this.r, this.g, this.b];\n    },\n\n    /**\n     * Simultaneously updates the rgb-components of the color, by passing an array.\n     */\n    set: function (values) {\n      this.r = values[0];\n      this.g = values[1];\n      this.b = values[2];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Mixes the two color together with an optional mixing weight.\n   * This weight is 0.5 by default, perfectly averaging the color.\n   */\n\n  Color.prototype.mix = function (color, weight) {\n    if (weight === void 0) {\n      weight = 0.5;\n    }\n\n    return new Color(math_1.lerp(this.r, color.r, weight), math_1.lerp(this.g, color.g, weight), math_1.lerp(this.b, color.b, weight));\n  };\n  /**\n   * Returns the hexadecimal representation of the color, prefixed by '#'.\n   */\n\n\n  Color.prototype.toHex = function () {\n    var hex = function (v) {\n      return v.toString(16).padStart(2, \"0\");\n    };\n\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  };\n  /**\n   * Returns a formatted representation of the color.\n   */\n\n\n  Color.prototype.toString = function () {\n    return \"rgb(\" + this.values.join(\", \") + \")\";\n  };\n  /**\n   * Creates a color from the specified hexadecimal string.\n   * This string can optionally be prefixed by '#'.\n   */\n\n\n  Color.fromHex = function (hex) {\n    if (hex.startsWith(\"#\")) {\n      hex = hex.substr(1);\n    }\n\n    return new Color(parseInt(hex.substr(0, 2), 16), parseInt(hex.substr(2, 2), 16), parseInt(hex.substr(4, 2), 16));\n  };\n  /**\n   * Creates a color from the specified HSL components.\n   *\n   * @see https://stackoverflow.com/a/9493060/5507624\n   */\n\n\n  Color.fromHsl = function (h, s, l) {\n    h /= 360;\n    s /= 100;\n    l /= 100;\n\n    if (s === 0) {\n      return new Color(l, l, l);\n    } else {\n      var hue2rgb = function (p, q, t) {\n        if (t < 0) t += 1;\n        if (t > 1) t -= 1;\n        if (t < 1 / 6) return p + (q - p) * 6 * t;\n        if (t < 1 / 2) return q;\n        if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n        return p;\n      };\n\n      var to255 = function (v) {\n        return Math.min(255, 256 * v);\n      };\n\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      var p = 2 * l - q;\n      return new Color(to255(hue2rgb(p, q, h + 1 / 3)), to255(hue2rgb(p, q, h)), to255(hue2rgb(p, q, h - 1 / 3)));\n    }\n  };\n  /**\n   * Returns (1, 1, 1).\n   */\n\n\n  Color.white = new Color(255, 255, 255);\n  /**\n   * Returns (0, 0, 0).\n   */\n\n  Color.black = new Color(0, 0, 0);\n  return Color;\n}();\n\nexports.Color = Color;","map":{"version":3,"mappings":"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","names":["r","g","b","Float32Array","rgb","Object","Color","values","value","Math","floor","color","weight","math_1","hex","v","toString","padStart","join","startsWith","substr","parseInt","h","s","l","hue2rgb","p","q","t","to255","min","exports"],"sources":["../../src/components/color.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}