{"ast":null,"code":"var _jsxFileName = \"/Users/abhinildutt/Desktop/feudle-2.0/src/components/Keyboard/Keyboard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./Keyboard.css\";\nimport Key from \"./Key\";\nimport { Feudle } from \"../../logic/game.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Keyboard = () => {\n  _s();\n\n  var line = 1,\n      box = 1;\n  var word = \"\";\n  const keyLayout = [[\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\"], [\"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\"], //backpace included here by default\n  [\"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"] //enter included on bottom by default\n  ];\n  const [keyInput, setKeyInput] = React.useState(\"\");\n  var game = new Feudle();\n  game.set_word(\"ALERT\");\n\n  const change_green = (line, box, num) => {\n    const s = num + \"line\" + line.toString() + \"box\" + box.toString();\n    document.getElementById(s).style.backgroundColor = \"#46a842\";\n  };\n\n  const change_yellow = (line, box, num) => {\n    const s = num + \"line\" + line.toString() + \"box\" + box.toString();\n    document.getElementById(s).style.backgroundColor = \"#c1cc5c\";\n  };\n\n  const change_grey = (line, box, num) => {\n    const s = num + \"line\" + line.toString() + \"box\" + box.toString();\n    document.getElementById(s).style.backgroundColor = \"#5f6870\";\n  };\n\n  document.addEventListener(\"keyup\", function (event) {\n    switch (event.code) {\n      case \"Enter\":\n        if (word.length == 5) {\n          console.log(word);\n          game.guess(word);\n\n          for (var i = 0; i < s.length; i++) {\n            if (s[i] == 'g') {\n              change_green(line, i + 1, \"\");\n            }\n\n            if (s[i] == 'y') {\n              change_yellow(line, i + 1, \"\");\n            }\n\n            if (s[i] == 'e') {\n              change_grey(line, i + 1, \"\");\n            }\n          }\n\n          line++;\n          box = 1;\n          word = \"\";\n        } else alert(\"Word must be 5 letters\");\n\n      case \"Backspace\":\n        if (box > 1) box--;\n        var s = \"line\" + line.toString() + \"box\" + box.toString();\n        document.getElementById(s).innerHTML = `<div></div><br />`;\n        document.getElementById(s).style.border = \"0.1px solid black\";\n        document.getElementById(s).style.margin = \"4px\";\n        if (word.length != 0) word = word.slice(0, -1);\n        break;\n\n      default:\n        if (box <= 5) {\n          var s = \"line\" + line.toString() + \"box\" + box.toString();\n          var keyValue = event.code.toUpperCase();\n          document.getElementById(s).innerHTML += `<div>${keyValue[keyValue.length - 1]}</div><br />`;\n          document.getElementById(s).style.border = \"2px solid black\";\n          document.getElementById(s).style.margin = \"2.44px\";\n          word += keyValue[keyValue.length - 1].toUpperCase();\n        }\n\n        if (box <= 5) box++;\n        break;\n    }\n  });\n\n  const buttonPressHandler = keyValue => {\n    //set max length of input to 5\n    if (box <= 5) {\n      var s = \"line\" + line.toString() + \"box\" + box.toString();\n      document.getElementById(s).innerHTML += `<div>${keyValue.toUpperCase()}</div><br />`;\n      document.getElementById(s).style.border = \"2px solid black\";\n      document.getElementById(s).style.margin = \"2.44px\";\n      word += keyValue.toUpperCase();\n    }\n\n    if (box <= 5) box++;\n  };\n\n  const backspaceHandler = () => {\n    if (box > 1) box--;\n    var s = \"line\" + line.toString() + \"box\" + box.toString();\n    document.getElementById(s).innerHTML = `<div></div><br />`;\n    document.getElementById(s).style.border = \"0.1px solid black\";\n    document.getElementById(s).style.margin = \"4px\";\n    if (word.length != 0) word = word.slice(0, -1);\n  };\n\n  const submitHandler = () => {\n    //submit only when input is 5 characters\n    if (word.length == 5) {\n      console.log(word);\n      game.guess(word);\n      var s = game.color(word);\n\n      for (var i = 0; i < s.length; i++) {\n        if (s[i] == 'g') {\n          change_green(line, i + 1, \"\");\n        }\n\n        if (s[i] == 'y') {\n          change_yellow(line, i + 1, \"\");\n        }\n\n        if (s[i] == 'e') {\n          change_grey(line, i + 1, \"\");\n        }\n      }\n\n      line++;\n      box = 1;\n      word = \"\";\n    } else alert(\"Word must be 5 letters\");\n  };\n\n  const backspaceKey = /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    className: \"keyboard__key\",\n    onClick: backspaceHandler,\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"22\",\n      height: \"22\",\n      fill: \"currentColor\",\n      class: \"bi bi-backspace-fill\",\n      viewBox: \"0 0 16 16\",\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M15.683 3a2 2 0 0 0-2-2h-7.08a2 2 0 0 0-1.519.698L.241 7.35a1 1 0 0 0 0 1.302l4.843 5.65A2 2 0 0 0 6.603 15h7.08a2 2 0 0 0 2-2V3zM5.829 5.854a.5.5 0 1 1 .707-.708l2.147 2.147 2.146-2.147a.5.5 0 1 1 .707.708L9.39 8l2.146 2.146a.5.5 0 0 1-.707.708L8.683 8.707l-2.147 2.147a.5.5 0 0 1-.707-.708L7.976 8 5.829 5.854z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n\n  const enterKey = /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: submitHandler,\n    type: \"button\",\n    className: \"keyboard__key\",\n    children: \"Enter\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"keyboard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard__keys\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: keyLayout[0].map(key => /*#__PURE__*/_jsxDEV(Key, {\n          text: key,\n          onPress: buttonPressHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [keyLayout[1].map(key => /*#__PURE__*/_jsxDEV(Key, {\n          text: key,\n          onPress: buttonPressHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)), backspaceKey]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [keyLayout[2].map(key => /*#__PURE__*/_jsxDEV(Key, {\n          text: key,\n          onPress: buttonPressHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)), enterKey]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Keyboard, \"jAAidqe4HO5iWzE2h8qbwNIhRMA=\");\n\n_c = Keyboard;\nexport default Keyboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Keyboard\");","map":{"version":3,"names":["React","Key","Feudle","Keyboard","line","box","word","keyLayout","keyInput","setKeyInput","useState","game","set_word","change_green","num","s","toString","document","getElementById","style","backgroundColor","change_yellow","change_grey","addEventListener","event","code","length","console","log","guess","i","alert","innerHTML","border","margin","slice","keyValue","toUpperCase","buttonPressHandler","backspaceHandler","submitHandler","color","backspaceKey","enterKey","map","key"],"sources":["/Users/abhinildutt/Desktop/feudle-2.0/src/components/Keyboard/Keyboard.js"],"sourcesContent":["import React from \"react\";\nimport \"./Keyboard.css\";\nimport Key from \"./Key\";\nimport {Feudle} from \"../../logic/game.js\";\n\nconst Keyboard = () => {\n  var line = 1, box = 1;\n  var word = \"\";\n  const keyLayout = [\n    [\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\"],\n    [\"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\"], //backpace included here by default\n    [\"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"], //enter included on bottom by default\n  ];\n\n  const [keyInput, setKeyInput] = React.useState(\"\");\n\n  var game = new Feudle();\n  game.set_word(\"ALERT\");\n\n  const change_green = (line, box, num) => {\n    const s = num + \"line\" + line.toString() + \"box\" + box.toString();\n    document.getElementById(s).style.backgroundColor = \"#46a842\";\n  }\n  const change_yellow = (line, box, num) => {\n    const s = num + \"line\" + line.toString() + \"box\" + box.toString();\n    document.getElementById(s).style.backgroundColor = \"#c1cc5c\";\n  }\n  const change_grey = (line, box, num) => {\n    const s = num + \"line\" + line.toString() + \"box\" + box.toString();\n    document.getElementById(s).style.backgroundColor = \"#5f6870\";\n  }\n\n  \n  document.addEventListener(\"keyup\", function(event) {\n    switch (event.code) {\n        case \"Enter\":\n          if(word.length == 5) {\n            console.log(word);\n            game.guess(word);\n\n            for (var i = 0; i < s.length; i++) {\n              if(s[i] == 'g') {\n                change_green(line,i+1,\"\");\n              }\n              if(s[i] == 'y') {\n                change_yellow(line,i+1,\"\");\n              }\n              if(s[i] == 'e') {\n                change_grey(line,i+1,\"\");\n              }\n            }\n\n            line++;\n            box = 1;\n            word = \"\";\n          }\n          else alert(\"Word must be 5 letters\")\n        case \"Backspace\" :\n          if(box > 1) box--;\n          var s = \"line\" + line.toString() + \"box\" + box.toString();\n          document.getElementById(s).innerHTML = `<div></div><br />`;\n          document.getElementById(s).style.border = \"0.1px solid black\";\n          document.getElementById(s).style.margin = \"4px\";\n          if(word.length != 0) word = word.slice(0,-1);\n          break;\n        default:\n          if(box <= 5) {\n            var s = \"line\" + line.toString() + \"box\" + box.toString();  \n            var keyValue = event.code.toUpperCase();\n            document.getElementById(s).innerHTML +=`<div>${keyValue[keyValue.length-1]}</div><br />`;\n            document.getElementById(s).style.border = \"2px solid black\";\n            document.getElementById(s).style.margin = \"2.44px\";\n            word += keyValue[keyValue.length-1].toUpperCase();\n          }\n          if(box <= 5) box++;\n          break;\n        }\n    }\n  );\n\n  const buttonPressHandler = (keyValue) => {\n    //set max length of input to 5\n    if(box <= 5) {\n      var s = \"line\" + line.toString() + \"box\" + box.toString();  \n      document.getElementById(s).innerHTML +=`<div>${keyValue.toUpperCase()}</div><br />`;\n      document.getElementById(s).style.border = \"2px solid black\";\n      document.getElementById(s).style.margin = \"2.44px\";\n      word += keyValue.toUpperCase();\n    }\n    if(box <= 5) box++;\n    \n  };\n\n  const backspaceHandler = () => {\n    if(box > 1) box--;\n    var s = \"line\" + line.toString() + \"box\" + box.toString();\n    document.getElementById(s).innerHTML = `<div></div><br />`;\n    document.getElementById(s).style.border = \"0.1px solid black\";\n    document.getElementById(s).style.margin = \"4px\";\n    if(word.length != 0) word = word.slice(0,-1);\n  };\n\n  const submitHandler = () => {\n    //submit only when input is 5 characters\n    if(word.length == 5) {\n      console.log(word);\n      game.guess(word);\n\n      var s = game.color(word);\n\n      for (var i = 0; i < s.length; i++) {\n        if(s[i] == 'g') {\n          change_green(line,i+1,\"\");\n        }\n        if(s[i] == 'y') {\n          change_yellow(line,i+1,\"\");\n        }\n        if(s[i] == 'e') {\n          change_grey(line,i+1,\"\");\n        }\n      }\n\n      line++;\n      box = 1;\n      word = \"\";\n    }\n    else alert(\"Word must be 5 letters\")\n  };\n\n  const backspaceKey = (\n    <button type=\"button\" className=\"keyboard__key\" onClick={backspaceHandler}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"22\"\n        height=\"22\"\n        fill=\"currentColor\"\n        class=\"bi bi-backspace-fill\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path d=\"M15.683 3a2 2 0 0 0-2-2h-7.08a2 2 0 0 0-1.519.698L.241 7.35a1 1 0 0 0 0 1.302l4.843 5.65A2 2 0 0 0 6.603 15h7.08a2 2 0 0 0 2-2V3zM5.829 5.854a.5.5 0 1 1 .707-.708l2.147 2.147 2.146-2.147a.5.5 0 1 1 .707.708L9.39 8l2.146 2.146a.5.5 0 0 1-.707.708L8.683 8.707l-2.147 2.147a.5.5 0 0 1-.707-.708L7.976 8 5.829 5.854z\" />\n      </svg>\n    </button>\n  );\n\n  const enterKey = (\n    <button onClick={submitHandler} type=\"button\" className=\"keyboard__key\">\n      Enter\n    </button>\n  );\n\n  return (\n    <div className=\"keyboard\">\n      {/* <h5>{keyInput}</h5> Remove this later */}\n      <div className=\"keyboard__keys\">\n        <div>\n          {keyLayout[0].map((key) => (\n            <Key text={key} onPress={buttonPressHandler} />\n          ))}\n        </div>\n        <div>\n          {keyLayout[1].map((key) => (\n            <Key text={key} onPress={buttonPressHandler} />\n          ))}\n          {backspaceKey}\n        </div>\n        <div>\n          {keyLayout[2].map((key) => (\n            <Key text={key} onPress={buttonPressHandler} />\n          ))}\n          {enterKey}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Keyboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}