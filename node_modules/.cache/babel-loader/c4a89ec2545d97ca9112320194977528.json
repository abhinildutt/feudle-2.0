{"ast":null,"code":"var _jsxFileName = \"C:\\\\UIUC\\\\Dev\\\\feudle2.0\\\\feudle-2.0\\\\src\\\\components\\\\Timer\\\\TimerActual.js\",\n    _s = $RefreshSig$();\n\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./Timer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = () => {\n  _s();\n\n  const [time, setTime] = useState(0);\n  const [timerOn, setTimerOn] = useState(false);\n  useEffect(() => {\n    let interval = null;\n\n    if (timerOn) {\n      interval = setInterval(() => {\n        setTime(time => time + 10);\n      }, 10);\n    } else {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [timerOn]);\n  const minutes = (\"0\" + Math.floor(time / 60000 % 60)).slice(-2);\n  const seconds = (\"0\" + Math.floor(time / 1000 % 60)).slice(-2);\n  const percentage = Math.round(Math.floor(time / 1000 % 60).slice(-2) / 60.0 * 100);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 200,\n      height: 200\n    },\n    children: [/*#__PURE__*/_jsxDEV(CircularProgressbar, {\n      value: percentage,\n      text: minutes + \":\" + seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), \";\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setTimerOn(true),\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setTimerOn(false),\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setTime(0),\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"snp1kxavGO7tjRfbaxEOQxv4YU8=\");\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["CircularProgressbar","buildStyles","React","useState","useEffect","Timer","time","setTime","timerOn","setTimerOn","interval","setInterval","clearInterval","minutes","Math","floor","slice","seconds","percentage","round","width","height"],"sources":["C:/UIUC/Dev/feudle2.0/feudle-2.0/src/components/Timer/TimerActual.js"],"sourcesContent":["import { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./Timer.css\";\r\n\r\nconst Timer = () => {\r\n  const [time, setTime] = useState(0);\r\n  const [timerOn, setTimerOn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let interval = null;\r\n    if (timerOn) {\r\n      interval = setInterval(() => {\r\n        setTime((time) => time + 10);\r\n      }, 10);\r\n    } else {\r\n      clearInterval(interval);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [timerOn]);\r\n\r\n  const minutes = (\"0\" + Math.floor((time / 60000) % 60)).slice(-2);\r\n  const seconds = (\"0\" + Math.floor((time / 1000) % 60)).slice(-2);\r\n\r\n  const percentage = Math.round(((Math.floor((time / 1000) % 60)).slice(-2) / 60.0) * 100);\r\n\r\n  return (\r\n    <div style={{ width: 200, height: 200 }}>\r\n      <CircularProgressbar value={percentage} text={minutes + \":\" + seconds} />;\r\n      <button onClick={() => setTimerOn(true)}>Start</button>\r\n      <button onClick={() => setTimerOn(false)}>Stop</button>\r\n      <button onClick={() => setTime(0)}>Reset</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n"],"mappings":";;;AAAA,SAASA,mBAAT,EAA8BC,WAA9B,QAAiD,4BAAjD;AACA,OAAO,4CAAP;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,aAAP;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAClB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;EAEAC,SAAS,CAAC,MAAM;IACd,IAAIM,QAAQ,GAAG,IAAf;;IACA,IAAIF,OAAJ,EAAa;MACXE,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC3BJ,OAAO,CAAED,IAAD,IAAUA,IAAI,GAAG,EAAlB,CAAP;MACD,CAFqB,EAEnB,EAFmB,CAAtB;IAGD,CAJD,MAIO;MACLM,aAAa,CAACF,QAAD,CAAb;IACD;;IACD,OAAO,MAAME,aAAa,CAACF,QAAD,CAA1B;EACD,CAVQ,EAUN,CAACF,OAAD,CAVM,CAAT;EAYA,MAAMK,OAAO,GAAG,CAAC,MAAMC,IAAI,CAACC,KAAL,CAAYT,IAAI,GAAG,KAAR,GAAiB,EAA5B,CAAP,EAAwCU,KAAxC,CAA8C,CAAC,CAA/C,CAAhB;EACA,MAAMC,OAAO,GAAG,CAAC,MAAMH,IAAI,CAACC,KAAL,CAAYT,IAAI,GAAG,IAAR,GAAgB,EAA3B,CAAP,EAAuCU,KAAvC,CAA6C,CAAC,CAA9C,CAAhB;EAEA,MAAME,UAAU,GAAGJ,IAAI,CAACK,KAAL,CAAaL,IAAI,CAACC,KAAL,CAAYT,IAAI,GAAG,IAAR,GAAgB,EAA3B,CAAD,CAAiCU,KAAjC,CAAuC,CAAC,CAAxC,IAA6C,IAA9C,GAAsD,GAAjE,CAAnB;EAEA,oBACE;IAAK,KAAK,EAAE;MAAEI,KAAK,EAAE,GAAT;MAAcC,MAAM,EAAE;IAAtB,CAAZ;IAAA,wBACE,QAAC,mBAAD;MAAqB,KAAK,EAAEH,UAA5B;MAAwC,IAAI,EAAEL,OAAO,GAAG,GAAV,GAAgBI;IAA9D;MAAA;MAAA;MAAA;IAAA,QADF,oBAEE;MAAQ,OAAO,EAAE,MAAMR,UAAU,CAAC,IAAD,CAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,OAAO,EAAE,MAAMA,UAAU,CAAC,KAAD,CAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAQ,OAAO,EAAE,MAAMF,OAAO,CAAC,CAAD,CAA9B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CA7BD;;GAAMF,K;;KAAAA,K;AA+BN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}