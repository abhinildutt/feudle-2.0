{"ast":null,"code":"var _jsxFileName = \"C:\\\\UIUC\\\\Dev\\\\feudle2.0\\\\feudle-2.0\\\\src\\\\components\\\\Keyboard\\\\Keyboard.js\";\nimport React, { useState } from \"react\";\nimport \"./Keyboard.css\";\nimport Key from \"./Key\";\nimport { Feudle } from \"../../logic/game.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Keyboard = props => {\n  var line = 1,\n      box = 1;\n  var word = \"\";\n  const keyLayout = [[\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\"], [\"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\"], //backpace included here by default\n  [\"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"] //enter included on bottom by default\n  ]; // const [keyInput, setKeyInput] = React.useState(\"\");\n\n  var game = new Feudle();\n  game.set_word(\"ROUTE\");\n\n  const change_green = (line, box, num, key) => {\n    const s = num + \"line\" + line.toString() + \"box\" + box.toString();\n    document.getElementById(s).style.backgroundColor = \"rgb(70, 168, 66)\";\n    document.getElementById(\"key\" + key.toString().toUpperCase()).style.background = \"rgb(70, 168, 66)\";\n  };\n\n  const change_yellow = (line, box, num, key) => {\n    const s = num + \"line\" + line.toString() + \"box\" + box.toString();\n    document.getElementById(s).style.backgroundColor = \"rgb(239, 187, 16)\";\n\n    if (document.getElementById(\"key\" + key.toString().toUpperCase()).style.background !== \"rgb(70, 168, 66)\") {\n      document.getElementById(\"key\" + key.toString().toUpperCase()).style.background = \"rgb(239, 187, 16)\";\n    }\n  };\n\n  const change_grey = (line, box, num, key) => {\n    const s = num + \"line\" + line.toString() + \"box\" + box.toString();\n    document.getElementById(s).style.backgroundColor = \"rgb(95, 104, 112)\";\n\n    if (document.getElementById(\"key\" + key.toString().toUpperCase()).style.background !== \"rgb(70, 168, 66)\" && document.getElementById(\"key\" + key.toString().toUpperCase()).style.background !== \"rgb(239, 187, 16)\") {\n      document.getElementById(\"key\" + key.toString().toUpperCase()).style.background = \"rgb(95, 104, 112)\";\n    }\n  }; // document.addEventListener(\"keyup\", Respond);\n  // function Respond(event) {\n  //   switch (event.code) {\n  //     case \"Enter\":\n  //       if(word.length == 5) {\n  //         console.log(word);\n  //         game.guess(word);\n  //         var s = game.color(word);\n  //         if (s == \"ggggg\") {\n  //           props.onVictory();\n  //         }\n  //         for (var i = 0; i < s.length; i++) {\n  //           const s2 = \"line\" + line.toString() + \"box\" + (i+1).toString();\n  //           document.getElementById(s2).style.color = \"rgb(255, 255, 255)\";\n  //           document.getElementById(s2).style.border = \"0px solid black\";\n  //           document.getElementById(s2).style.margin = \"4px\";\n  //           document.getElementById(s2).style.fontSize = \"25px\";\n  //           document.getElementById(s2).style.height = \"8vh\";\n  //           document.getElementById(s2).style.width = \"4.5vw\";\n  //           if(s[i] == 'g') {\n  //             change_green(line,i+1,\"\", word[i]);\n  //           }\n  //           if(s[i] == 'y') {\n  //             change_yellow(line,i+1,\"\", word[i]);\n  //           }\n  //           if(s[i] == 'e') {\n  //             change_grey(line,i+1,\"\", word[i]);\n  //           }\n  //         }\n  //         line++;\n  //         box = 1;\n  //         word = \"\";\n  //       }\n  //       else alert(\"Word must be 5 letters\")\n  //     case \"Backspace\" :\n  //       if(box > 1) box--;\n  //       var s = \"line\" + line.toString() + \"box\" + box.toString();\n  //       document.getElementById(s).innerHTML = `<div></div><br />`;\n  //       document.getElementById(s).style.border = \"0.1px solid black\";\n  //       document.getElementById(s).style.margin = \"4px\";\n  //       if(word.length != 0) word = word.slice(0,-1);\n  //       break;\n  //     default:\n  //       if(box <= 5) {\n  //         var s = \"line\" + line.toString() + \"box\" + box.toString();  \n  //         var keyValue = event.code.toUpperCase();\n  //         document.getElementById(s).innerHTML +=`<div>${keyValue[keyValue.length-1]}</div><br />`;\n  //         document.getElementById(s).style.border = \"2px solid black\";\n  //         document.getElementById(s).style.margin = \"4px\";\n  //         word += keyValue[keyValue.length-1].toUpperCase();\n  //       }\n  //       if(box <= 5) box++;\n  //       break;\n  //     }\n  // }\n\n\n  const buttonPressHandler = keyValue => {\n    //set max length of input to 5\n    if (box <= 5) {\n      var s = \"line\" + line.toString() + \"box\" + box.toString();\n      document.getElementById(s).innerHTML += `<div>${keyValue.toUpperCase()}</div><br />`;\n      document.getElementById(s).style.border = \"2px solid black\";\n      document.getElementById(s).style.margin = \"4px\";\n      word += keyValue.toUpperCase();\n    }\n\n    if (box <= 5) box++;\n  };\n\n  const backspaceHandler = () => {\n    if (box > 1) box--;\n    var s = \"line\" + line.toString() + \"box\" + box.toString();\n    document.getElementById(s).innerHTML = `<div></div><br />`;\n    document.getElementById(s).style.border = \"0.1px solid black\";\n    document.getElementById(s).style.margin = \"4px\";\n    if (word.length != 0) word = word.slice(0, -1);\n  };\n\n  const submitHandler = () => {\n    //submit only when input is 5 characters\n    if (word.length == 5) {\n      game.guess(word);\n      var s = game.color(word);\n\n      for (var i = 0; i < s.length; i++) {\n        const s2 = \"line\" + line.toString() + \"box\" + (i + 1).toString();\n        document.getElementById(s2).style.color = \"rgb(255, 255, 255)\";\n        document.getElementById(s2).style.border = \"0px solid black\";\n        document.getElementById(s2).style.margin = \"4px\";\n        document.getElementById(s2).style.fontSize = \"25px\";\n        document.getElementById(s2).style.height = \"8vh\";\n        document.getElementById(s2).style.width = \"4.5vw\";\n\n        if (s[i] == 'g') {\n          change_green(line, i + 1, \"\");\n        }\n\n        if (s[i] == 'y') {\n          change_yellow(line, i + 1, \"\");\n        }\n\n        if (s[i] == 'e') {\n          change_grey(line, i + 1, \"\");\n        }\n      }\n\n      line++;\n      box = 1;\n      word = \"\";\n    } else alert(\"Word must be 5 letters\");\n  };\n\n  const backspaceKey = /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    className: \"keyboard__key\",\n    onClick: backspaceHandler,\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"22\",\n      height: \"22\",\n      fill: \"currentColor\",\n      class: \"bi bi-backspace-fill\",\n      viewBox: \"0 0 16 16\",\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M15.683 3a2 2 0 0 0-2-2h-7.08a2 2 0 0 0-1.519.698L.241 7.35a1 1 0 0 0 0 1.302l4.843 5.65A2 2 0 0 0 6.603 15h7.08a2 2 0 0 0 2-2V3zM5.829 5.854a.5.5 0 1 1 .707-.708l2.147 2.147 2.146-2.147a.5.5 0 1 1 .707.708L9.39 8l2.146 2.146a.5.5 0 0 1-.707.708L8.683 8.707l-2.147 2.147a.5.5 0 0 1-.707-.708L7.976 8 5.829 5.854z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n\n  const enterKey = /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: submitHandler,\n    type: \"button\",\n    className: \"keyboard__key\",\n    children: \"Enter\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"keyboard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard__keys\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: keyLayout[0].map(key => /*#__PURE__*/_jsxDEV(Key, {\n          text: key,\n          onPress: buttonPressHandler,\n          id: \"key\" + key.toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [keyLayout[1].map(key => /*#__PURE__*/_jsxDEV(Key, {\n          text: key,\n          onPress: buttonPressHandler,\n          id: \"key\" + key.toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)), backspaceKey]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [keyLayout[2].map(key => /*#__PURE__*/_jsxDEV(Key, {\n          text: key,\n          onPress: buttonPressHandler,\n          id: \"key\" + key.toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)), enterKey]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Keyboard;\nexport default Keyboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Keyboard\");","map":{"version":3,"names":["React","useState","Key","Feudle","Keyboard","props","line","box","word","keyLayout","game","set_word","change_green","num","key","s","toString","document","getElementById","style","backgroundColor","toUpperCase","background","change_yellow","change_grey","buttonPressHandler","keyValue","innerHTML","border","margin","backspaceHandler","length","slice","submitHandler","guess","color","i","s2","fontSize","height","width","alert","backspaceKey","enterKey","map"],"sources":["C:/UIUC/Dev/feudle2.0/feudle-2.0/src/components/Keyboard/Keyboard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Keyboard.css\";\r\nimport Key from \"./Key\";\r\nimport {Feudle} from \"../../logic/game.js\";\r\n\r\nconst Keyboard = (props) => {\r\n  var line = 1, box = 1;\r\n  var word = \"\";\r\n  const keyLayout = [\r\n    [\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\"],\r\n    [\"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\"], //backpace included here by default\r\n    [\"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"], //enter included on bottom by default\r\n  ];\r\n\r\n  // const [keyInput, setKeyInput] = React.useState(\"\");\r\n\r\n  var game = new Feudle();\r\n  game.set_word(\"ROUTE\");\r\n\r\n  const change_green = (line, box, num, key) => {\r\n    const s = num + \"line\" + line.toString() + \"box\" + box.toString();\r\n    document.getElementById(s).style.backgroundColor = \"rgb(70, 168, 66)\";\r\n    document.getElementById(\"key\"+key.toString().toUpperCase()).style.background = \"rgb(70, 168, 66)\";\r\n  }\r\n  const change_yellow = (line, box, num, key) => {\r\n    const s = num + \"line\" + line.toString() + \"box\" + box.toString();\r\n    document.getElementById(s).style.backgroundColor = \"rgb(239, 187, 16)\";\r\n    if(document.getElementById(\"key\"+key.toString().toUpperCase()).style.background !== \"rgb(70, 168, 66)\") {\r\n      document.getElementById(\"key\"+key.toString().toUpperCase()).style.background = \"rgb(239, 187, 16)\";\r\n    }\r\n  }\r\n  const change_grey = (line, box, num, key) => {\r\n    const s = num + \"line\" + line.toString() + \"box\" + box.toString();\r\n    document.getElementById(s).style.backgroundColor = \"rgb(95, 104, 112)\";\r\n    if(document.getElementById(\"key\"+key.toString().toUpperCase()).style.background !== \"rgb(70, 168, 66)\" \r\n    && document.getElementById(\"key\"+key.toString().toUpperCase()).style.background !== \"rgb(239, 187, 16)\") {\r\n      document.getElementById(\"key\"+key.toString().toUpperCase()).style.background = \"rgb(95, 104, 112)\";\r\n    }\r\n  }\r\n\r\n  // document.addEventListener(\"keyup\", Respond);\r\n  // function Respond(event) {\r\n  //   switch (event.code) {\r\n  //     case \"Enter\":\r\n  //       if(word.length == 5) {\r\n  //         console.log(word);\r\n  //         game.guess(word);\r\n  //         var s = game.color(word);\r\n  //         if (s == \"ggggg\") {\r\n  //           props.onVictory();\r\n  //         }\r\n  //         for (var i = 0; i < s.length; i++) {\r\n\r\n  //           const s2 = \"line\" + line.toString() + \"box\" + (i+1).toString();\r\n\r\n  //           document.getElementById(s2).style.color = \"rgb(255, 255, 255)\";\r\n  //           document.getElementById(s2).style.border = \"0px solid black\";\r\n  //           document.getElementById(s2).style.margin = \"4px\";\r\n  //           document.getElementById(s2).style.fontSize = \"25px\";\r\n  //           document.getElementById(s2).style.height = \"8vh\";\r\n  //           document.getElementById(s2).style.width = \"4.5vw\";\r\n\r\n  //           if(s[i] == 'g') {\r\n  //             change_green(line,i+1,\"\", word[i]);\r\n  //           }\r\n  //           if(s[i] == 'y') {\r\n  //             change_yellow(line,i+1,\"\", word[i]);\r\n  //           }\r\n  //           if(s[i] == 'e') {\r\n  //             change_grey(line,i+1,\"\", word[i]);\r\n  //           }\r\n  //         }\r\n\r\n  //         line++;\r\n  //         box = 1;\r\n  //         word = \"\";\r\n  //       }\r\n  //       else alert(\"Word must be 5 letters\")\r\n  //     case \"Backspace\" :\r\n  //       if(box > 1) box--;\r\n  //       var s = \"line\" + line.toString() + \"box\" + box.toString();\r\n  //       document.getElementById(s).innerHTML = `<div></div><br />`;\r\n  //       document.getElementById(s).style.border = \"0.1px solid black\";\r\n  //       document.getElementById(s).style.margin = \"4px\";\r\n  //       if(word.length != 0) word = word.slice(0,-1);\r\n  //       break;\r\n  //     default:\r\n  //       if(box <= 5) {\r\n  //         var s = \"line\" + line.toString() + \"box\" + box.toString();  \r\n  //         var keyValue = event.code.toUpperCase();\r\n  //         document.getElementById(s).innerHTML +=`<div>${keyValue[keyValue.length-1]}</div><br />`;\r\n  //         document.getElementById(s).style.border = \"2px solid black\";\r\n  //         document.getElementById(s).style.margin = \"4px\";\r\n  //         word += keyValue[keyValue.length-1].toUpperCase();\r\n  //       }\r\n  //       if(box <= 5) box++;\r\n  //       break;\r\n  //     }\r\n  // }\r\n  \r\n\r\n  const buttonPressHandler = (keyValue) => {\r\n    //set max length of input to 5\r\n    if(box <= 5) {\r\n      var s = \"line\" + line.toString() + \"box\" + box.toString();  \r\n      document.getElementById(s).innerHTML +=`<div>${keyValue.toUpperCase()}</div><br />`;\r\n      document.getElementById(s).style.border = \"2px solid black\";\r\n      document.getElementById(s).style.margin = \"4px\";\r\n      word += keyValue.toUpperCase();\r\n    }\r\n    if(box <= 5) box++;\r\n    \r\n  };\r\n\r\n  const backspaceHandler = () => {\r\n    if(box > 1) box--;\r\n    var s = \"line\" + line.toString() + \"box\" + box.toString();\r\n    document.getElementById(s).innerHTML = `<div></div><br />`;\r\n    document.getElementById(s).style.border = \"0.1px solid black\";\r\n    document.getElementById(s).style.margin = \"4px\";\r\n    if(word.length != 0) word = word.slice(0,-1);\r\n  };\r\n\r\n\r\n  const submitHandler = () => {\r\n    //submit only when input is 5 characters\r\n    if(word.length == 5) {\r\n      game.guess(word);\r\n\r\n      var s = game.color(word);\r\n\r\n      for (var i = 0; i < s.length; i++) {\r\n\r\n        const s2 = \"line\" + line.toString() + \"box\" + (i+1).toString();\r\n\r\n        document.getElementById(s2).style.color = \"rgb(255, 255, 255)\";\r\n        document.getElementById(s2).style.border = \"0px solid black\";\r\n        document.getElementById(s2).style.margin = \"4px\";\r\n        document.getElementById(s2).style.fontSize = \"25px\";\r\n        document.getElementById(s2).style.height = \"8vh\";\r\n        document.getElementById(s2).style.width = \"4.5vw\";\r\n\r\n        if(s[i] == 'g') {\r\n          change_green(line,i+1,\"\");\r\n        }\r\n        if(s[i] == 'y') {\r\n          change_yellow(line,i+1,\"\");\r\n        }\r\n        if(s[i] == 'e') {\r\n          change_grey(line,i+1,\"\");\r\n        }\r\n      }\r\n      line++;\r\n      box = 1;\r\n      word = \"\";\r\n    }\r\n    else alert(\"Word must be 5 letters\")\r\n  };\r\n\r\n  const backspaceKey = (\r\n    <button type=\"button\" className=\"keyboard__key\" onClick={backspaceHandler}>\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"22\"\r\n        height=\"22\"\r\n        fill=\"currentColor\"\r\n        class=\"bi bi-backspace-fill\"\r\n        viewBox=\"0 0 16 16\"\r\n      >\r\n        <path d=\"M15.683 3a2 2 0 0 0-2-2h-7.08a2 2 0 0 0-1.519.698L.241 7.35a1 1 0 0 0 0 1.302l4.843 5.65A2 2 0 0 0 6.603 15h7.08a2 2 0 0 0 2-2V3zM5.829 5.854a.5.5 0 1 1 .707-.708l2.147 2.147 2.146-2.147a.5.5 0 1 1 .707.708L9.39 8l2.146 2.146a.5.5 0 0 1-.707.708L8.683 8.707l-2.147 2.147a.5.5 0 0 1-.707-.708L7.976 8 5.829 5.854z\" />\r\n      </svg>\r\n    </button>\r\n  );\r\n\r\n  const enterKey = (\r\n    <button onClick={submitHandler} type=\"button\" className=\"keyboard__key\">\r\n      Enter\r\n    </button>\r\n  );\r\n\r\n  return (\r\n    <div className=\"keyboard\">\r\n      <div className=\"keyboard__keys\">\r\n        <div>\r\n          {keyLayout[0].map((key) => (\r\n            <Key text={key} onPress={buttonPressHandler} id={\"key\" + key.toString()} />\r\n          ))}\r\n        </div>\r\n        <div>\r\n        {keyLayout[1].map((key) => (\r\n            <Key text={key} onPress={buttonPressHandler} id={\"key\" + key.toString()} />\r\n          ))}\r\n          {backspaceKey}\r\n        </div>\r\n        <div>\r\n        {keyLayout[2].map((key) => (\r\n            <Key text={key} onPress={buttonPressHandler} id={\"key\" + key.toString()} />\r\n          ))}\r\n          {enterKey}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Keyboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}