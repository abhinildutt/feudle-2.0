{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.confetti = void 0;\n\nvar __1 = require(\"../\");\n\nvar components_1 = require(\"../components\");\n\nvar modules_1 = require(\"../systems/modules\");\n\nvar random = require(\"../systems/random\");\n\nvar sources = require(\"../systems/sources\");\n\nvar variation = require(\"../systems/variation\");\n\nvar util = require(\"../util\");\n/**\r\n * The standard confetti template.\r\n *\r\n * @param source The source to emit the confetti from.\r\n * @param options The (optional) configuration overrides.\r\n */\n\n\nfunction confetti(source, options) {\n  var populated = util.overrideDefaults({\n    count: variation.range(20, 40),\n    spread: variation.range(35, 45),\n    speed: variation.range(300, 600),\n    size: variation.skew(1, 0.2),\n    rotation: function () {\n      return random.randomUnitVector().scale(180);\n    },\n    color: function () {\n      return components_1.Color.fromHsl(random.randomRange(0, 360), 100, 70);\n    },\n    modules: [new modules_1.ModuleBuilder().drive(\"size\").by(function (t) {\n      return Math.min(1, t * 3);\n    }).relative().build(), new modules_1.ModuleBuilder().drive(\"rotation\").by(function (t) {\n      return new components_1.Vector(140, 200, 260).scale(t);\n    }).relative().build()],\n    shapes: [\"square\", \"circle\"]\n  }, options);\n\n  var emitter = __1.scene.current.createEmitter({\n    emitterOptions: {\n      loops: 1,\n      duration: 8,\n      modules: populated.modules\n    },\n    emissionOptions: {\n      rate: 0,\n      bursts: [{\n        time: 0,\n        count: populated.count\n      }],\n      sourceSampler: sources.dynamicSource(source),\n      angle: variation.skew(-90, variation.evaluateVariation(populated.spread)),\n      initialLifetime: 8,\n      initialSpeed: populated.speed,\n      initialSize: populated.size,\n      initialRotation: populated.rotation,\n      initialColor: populated.color\n    },\n    rendererOptions: {\n      shapeFactory: populated.shapes\n    }\n  });\n\n  return emitter;\n}\n\nexports.confetti = confetti;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;AAgBA;;;;;;;;AAMA,SAAgBA,QAAhB,CACIC,MADJ,EAEIC,OAFJ,EAE4C;EAExC,IAAMC,SAAS,GAAGC,IAAI,CAACC,gBAAL,CACd;IACIC,KAAK,EAAEC,SAAS,CAACC,KAAV,CAAgB,EAAhB,EAAoB,EAApB,CADX;IAEIC,MAAM,EAAEF,SAAS,CAACC,KAAV,CAAgB,EAAhB,EAAoB,EAApB,CAFZ;IAGIE,KAAK,EAAEH,SAAS,CAACC,KAAV,CAAgB,GAAhB,EAAqB,GAArB,CAHX;IAIIG,IAAI,EAAEJ,SAAS,CAACK,IAAV,CAAe,CAAf,EAAkB,GAAlB,CAJV;IAKIC,QAAQ,EAAE;MAAM,aAAM,CAACC,gBAAP,GAA0BC,KAA1B,CAAgC,GAAhC;IAAoC,CALxD;IAMIC,KAAK,EAAE;MAAM,0BAAMC,OAAN,CAAcC,MAAM,CAACC,WAAP,CAAmB,CAAnB,EAAsB,GAAtB,CAAd,EAA0C,GAA1C,EAA+C,EAA/C;IAAkD,CANnE;IAOIC,OAAO,EAAE,CACL,IAAIC,uBAAJ,GACKC,KADL,CACW,MADX,EAEKC,EAFL,CAEQ,UAACC,CAAD,EAAE;MAAK,WAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,CAAC,GAAG,CAAhB;IAAkB,CAFjC,EAGKE,QAHL,GAIKC,KAJL,EADK,EAML,IAAIN,uBAAJ,GACKC,KADL,CACW,UADX,EAEKC,EAFL,CAEQ,UAACC,CAAD,EAAE;MAAK,WAAII,mBAAJ,CAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0Bb,KAA1B,CAAgCS,CAAhC;IAAkC,CAFjD,EAGKE,QAHL,GAIKC,KAJL,EANK,CAPb;IAmBIE,MAAM,EAAE,CAAC,QAAD,EAAW,QAAX;EAnBZ,CADc,EAsBd3B,OAtBc,CAAlB;;EAyBA,IAAM4B,OAAO,GAAGC,UAAMC,OAAN,CAAcC,aAAd,CAA4B;IACxCC,cAAc,EAAE;MACZC,KAAK,EAAE,CADK;MAEZC,QAAQ,EAAE,CAFE;MAGZhB,OAAO,EAAEjB,SAAS,CAACiB;IAHP,CADwB;IAMxCiB,eAAe,EAAE;MACbC,IAAI,EAAE,CADO;MAEbC,MAAM,EAAE,CAAC;QAAEC,IAAI,EAAE,CAAR;QAAWlC,KAAK,EAAEH,SAAS,CAACG;MAA5B,CAAD,CAFK;MAIbmC,aAAa,EAAEC,OAAO,CAACC,aAAR,CAAsB1C,MAAtB,CAJF;MAKb2C,KAAK,EAAErC,SAAS,CAACK,IAAV,CACH,CAAC,EADE,EAEHL,SAAS,CAACsC,iBAAV,CAA4B1C,SAAS,CAACM,MAAtC,CAFG,CALM;MAUbqC,eAAe,EAAE,CAVJ;MAWbC,YAAY,EAAE5C,SAAS,CAACO,KAXX;MAYbsC,WAAW,EAAE7C,SAAS,CAACQ,IAZV;MAabsC,eAAe,EAAE9C,SAAS,CAACU,QAbd;MAcbqC,YAAY,EAAE/C,SAAS,CAACa;IAdX,CANuB;IAsBxCmC,eAAe,EAAE;MACbC,YAAY,EAAEjD,SAAS,CAAC0B;IADX;EAtBuB,CAA5B,CAAhB;;EA2BA,OAAOC,OAAP;AACH;;AAzDDuB","names":["confetti","source","options","populated","util","overrideDefaults","count","variation","range","spread","speed","size","skew","rotation","randomUnitVector","scale","color","fromHsl","random","randomRange","modules","modules_1","drive","by","t","min","relative","build","components_1","shapes","emitter","__1","current","createEmitter","emitterOptions","loops","duration","emissionOptions","rate","bursts","time","sourceSampler","sources","dynamicSource","angle","evaluateVariation","initialLifetime","initialSpeed","initialSize","initialRotation","initialColor","rendererOptions","shapeFactory","exports"],"sources":["../../src/templates/confetti.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}