{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDefaultRendererOptions = void 0;\n/**\r\n * Returns the default set of renderer options.\r\n */\n\nfunction getDefaultRendererOptions() {\n  return {\n    shapeFactory: \"square\",\n    applyColor: defaultApplyColor,\n    applyOpacity: defaultApplyOpacity,\n    applyLighting: defaultApplyLighting,\n    applyTransform: defaultApplyTransform\n  };\n}\n\nexports.getDefaultRendererOptions = getDefaultRendererOptions;\n/**\r\n * Applies the specified color to the element.\r\n *\r\n * @remarks\r\n * This function is aware of the element's node type:\r\n * - `div` elements have their `background` set.\r\n * - `svg` elements have their `fill` and `color` set.\r\n * - Other elements have their `color` set.\r\n */\n\nfunction defaultApplyColor(color, element) {\n  var hex = color.toHex(); // Note that by default, HTML node names are uppercase.\n\n  switch (element.nodeName.toLowerCase()) {\n    case \"div\":\n      element.style.background = hex;\n      break;\n\n    case \"svg\":\n      element.style.fill = element.style.color = hex;\n      break;\n\n    default:\n      element.style.color = hex;\n      break;\n  }\n}\n/**\r\n * Applies the specified opacity to the element.\r\n */\n\n\nfunction defaultApplyOpacity(opacity, element) {\n  element.style.opacity = opacity.toString();\n}\n/**\r\n * Applies the specified lighting to the element as a brightness filter.\r\n *\r\n * @remarks\r\n * This function assumes an ambient light with intensity 0.5, and that the\r\n * particle should be lit from both sides. The brightness filter can exceed 1,\r\n * to give the particles a \"glossy\" feel.\r\n */\n\n\nfunction defaultApplyLighting(lighting, element) {\n  element.style.filter = \"brightness(\" + (0.5 + Math.abs(lighting)) + \")\";\n}\n/**\r\n * Applies the specified transform to the element as a 3D CSS transform.\r\n * Also takes into account the current window scroll, to make sure that particles are\r\n * rendered inside of the fixed container.\r\n */\n\n\nfunction defaultApplyTransform(particle, element) {\n  element.style.transform = // Make sure to take window scrolling into account.\n  \"translateX(\" + (particle.location.x - window.scrollX).toFixed(3) + \"px) \" + (\"translateY(\" + (particle.location.y - window.scrollY).toFixed(3) + \"px) \") + (\"translateZ(\" + particle.location.z.toFixed(3) + \"px) \") + (\"rotateX(\" + particle.rotation.x.toFixed(3) + \"deg) \") + (\"rotateY(\" + particle.rotation.y.toFixed(3) + \"deg) \") + (\"rotateZ(\" + particle.rotation.z.toFixed(3) + \"deg) \") + (\"scale(\" + particle.size.toFixed(3) + \")\");\n}","map":{"version":3,"mappings":";;;;;;AAqDA;;;;AAGA,SAAgBA,yBAAhB,GAAyC;EACrC,OAAO;IACHC,YAAY,EAAE,QADX;IAGHC,UAAU,EAAEC,iBAHT;IAIHC,YAAY,EAAEC,mBAJX;IAKHC,aAAa,EAAEC,oBALZ;IAMHC,cAAc,EAAEC;EANb,CAAP;AAQH;;AATDC;AAWA;;;;;;;;;;AASA,SAASP,iBAAT,CAA2BQ,KAA3B,EAAyCC,OAAzC,EAA6D;EACzD,IAAMC,GAAG,GAAGF,KAAK,CAACG,KAAN,EAAZ,CADyD,CAEzD;;EACA,QAAQF,OAAO,CAACG,QAAR,CAAiBC,WAAjB,EAAR;IACI,KAAK,KAAL;MACIJ,OAAO,CAACK,KAAR,CAAcC,UAAd,GAA2BL,GAA3B;MACA;;IACJ,KAAK,KAAL;MACID,OAAO,CAACK,KAAR,CAAcE,IAAd,GAAqBP,OAAO,CAACK,KAAR,CAAcN,KAAd,GAAsBE,GAA3C;MACA;;IACJ;MACID,OAAO,CAACK,KAAR,CAAcN,KAAd,GAAsBE,GAAtB;MACA;EATR;AAWH;AACD;;;;;AAGA,SAASR,mBAAT,CAA6Be,OAA7B,EAA8CR,OAA9C,EAAkE;EAC9DA,OAAO,CAACK,KAAR,CAAcG,OAAd,GAAwBA,OAAO,CAACC,QAAR,EAAxB;AACH;AACD;;;;;;;;;;AAQA,SAASd,oBAAT,CAA8Be,QAA9B,EAAgDV,OAAhD,EAAoE;EAChEA,OAAO,CAACK,KAAR,CAAcM,MAAd,GAAuB,iBAAc,MAAMC,IAAI,CAACC,GAAL,CAASH,QAAT,CAApB,IAAsC,GAA7D;AACH;AACD;;;;;;;AAKA,SAASb,qBAAT,CAA+BiB,QAA/B,EAAmDd,OAAnD,EAAuE;EACnEA,OAAO,CAACK,KAAR,CAAcU,SAAd,GACI;EACA,gBAAc,CAACD,QAAQ,CAACE,QAAT,CAAkBC,CAAlB,GAAsBC,MAAM,CAACC,OAA9B,EAAuCC,OAAvC,CAA+C,CAA/C,CAAd,GAA+D,MAA/D,IACA,gBAAc,CAACN,QAAQ,CAACE,QAAT,CAAkBK,CAAlB,GAAsBH,MAAM,CAACI,OAA9B,EAAuCF,OAAvC,CAA+C,CAA/C,CAAd,GAA+D,MAD/D,KAEA,gBAAcN,QAAQ,CAACE,QAAT,CAAkBO,CAAlB,CAAoBH,OAApB,CAA4B,CAA5B,CAAd,GAA4C,MAF5C,KAGA,aAAWN,QAAQ,CAACU,QAAT,CAAkBP,CAAlB,CAAoBG,OAApB,CAA4B,CAA5B,CAAX,GAAyC,OAHzC,KAIA,aAAWN,QAAQ,CAACU,QAAT,CAAkBH,CAAlB,CAAoBD,OAApB,CAA4B,CAA5B,CAAX,GAAyC,OAJzC,KAKA,aAAWN,QAAQ,CAACU,QAAT,CAAkBD,CAAlB,CAAoBH,OAApB,CAA4B,CAA5B,CAAX,GAAyC,OALzC,KAMA,WAASN,QAAQ,CAACW,IAAT,CAAcL,OAAd,CAAsB,CAAtB,CAAT,GAAiC,GANjC,CAFJ;AASH","names":["getDefaultRendererOptions","shapeFactory","applyColor","defaultApplyColor","applyOpacity","defaultApplyOpacity","applyLighting","defaultApplyLighting","applyTransform","defaultApplyTransform","exports","color","element","hex","toHex","nodeName","toLowerCase","style","background","fill","opacity","toString","lighting","filter","Math","abs","particle","transform","location","x","window","scrollX","toFixed","y","scrollY","z","rotation","size"],"sources":["../../../src/particles/options/renderOptions.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}