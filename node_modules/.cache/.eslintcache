[{"/Users/abhinildutt/Desktop/feudle-2.0/src/index.js":"1","/Users/abhinildutt/Desktop/feudle-2.0/src/App.js":"2","/Users/abhinildutt/Desktop/feudle-2.0/src/components/Board/Box_player1.js":"3","/Users/abhinildutt/Desktop/feudle-2.0/src/components/Board/Box_player2.js":"4","/Users/abhinildutt/Desktop/feudle-2.0/src/components/Timer/Timer.js":"5","/Users/abhinildutt/Desktop/feudle-2.0/src/components/Keyboard/Keyboard.js":"6","/Users/abhinildutt/Desktop/feudle-2.0/src/logic/game.js":"7","/Users/abhinildutt/Desktop/feudle-2.0/src/components/Keyboard/Key.js":"8"},{"size":212,"mtime":1653705537835,"results":"9","hashOfConfig":"10"},{"size":3612,"mtime":1654178566616,"results":"11","hashOfConfig":"10"},{"size":923,"mtime":1653819045700,"results":"12","hashOfConfig":"10"},{"size":964,"mtime":1654136262413,"results":"13","hashOfConfig":"10"},{"size":1148,"mtime":1653820053305,"results":"14","hashOfConfig":"10"},{"size":6543,"mtime":1654173641667,"results":"15","hashOfConfig":"10"},{"size":2114,"mtime":1654136756182,"results":"16","hashOfConfig":"10"},{"size":294,"mtime":1653819045701,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u50eha",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/abhinildutt/Desktop/feudle-2.0/src/index.js",[],[],"/Users/abhinildutt/Desktop/feudle-2.0/src/App.js",["44","45","46","47","48","49","50","51","52"],[],"import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Box_player1 from \"./components/Board/Box_player1.js\";\nimport Box_player2 from \"./components/Board/Box_player2.js\";\nimport Keyboard from \"./components/Keyboard/Keyboard\";\nimport Timer from \"./components/Timer/Timer\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport party from \"party-js\";\nimport Modal from \"react-modal\";\nimport setting from \"./static/setting.png\";\nimport stat1 from \"./static/stat1.png\";\n// import stat2 from \"./static/stat2.png\";\nimport stat3 from \"./static/stat3.png\";\n// import stat4 from \"./static/stat4.png\";\n\n\n//https://codesandbox.io/s/77yom?file=/src/App.js:170-342\n\n\n\n\nModal.setAppElement(\"#root\");\nconst confettiSettings = {\n  shapes: [\n    \"square\",\n    \"rectangle\",\n    \"circle\",\n    \"roundedRectangle\",\n    \"roundedSquare\",\n    \"star\",\n  ],\n  // The amount of confetti particles that should be emitted.\n  count: party.variation.range(150, 160),\n  // The amount of spread that is applied to the emission angle. Note that the default angle points upwards.\n  spread: 20,\n  // The initial speed that the confetti particles are emitted with.\n  speed: party.variation.range(50, 600),\n  // The initial size that the confetti particles are emitted with.\n  size: party.variation.skew(1, 0.8),\n  // The initial rotation that the confetti particles are emitted with.\n  rotation: () => party.random.randomUnitVector().scale(180),\n  // The initial color that particles are emitted with.\n  color: () =>\n    party.random.pick([\n      party.Color.fromHex(\"#238446\"),\n      party.Color.fromHex(\"#1D7DB2\"),\n      party.Color.fromHex(\"#FFC800\"),\n      party.Color.fromHex(\"#FFFFFF\"),\n    ]),\n};\n\nfunction App() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  function hover_change_source(element) {\n    element.setAttribute('src', {stat3});\n  }\n\n  function toggleModal() {\n    setIsOpen(!isOpen);\n  }\n\n  const onOpenModal = () => {\n    setIsOpen(true);\n  };\n  useEffect(() => {\n    setTimeout(() => {\n      if (document.getElementById(\"modal\") && isOpen) {\n        party.confetti(document.getElementById(\"screen\"), confettiSettings);\n      }\n    }, 300);\n  }, [isOpen]);\n  return (\n    <div class=\"App-window\" id=\"screen\">\n      <Modal\n        isOpen={isOpen}\n        onRequestClose={toggleModal}\n        contentLabel=\"My dialog\"\n        className=\"mymodal\"\n        overlayClassName=\"myoverlay\"\n        closeTimeoutMS={500}\n      >\n        <div id=\"modal\" className=\"modal-content\">\n          <div class=\"\">Victory!</div>\n          <img src=\"https://media3.giphy.com/media/3o7qE2VAxuXWeyvJIY/giphy.gif?cid=790b761147318eb571bd2a9dd168a43264f3965f56f49fc9&rid=giphy.gif&ct=g\"></img>\n          <button className=\"close-modal-btn\" onClick={toggleModal}>\n            Close modal\n          </button>\n        </div>\n      </Modal>\n\n      <link\n        href=\"https://fonts.googleapis.com/css2?family=Fredoka&display=swap\"\n        rel=\"stylesheet\"\n      ></link>\n      <link\n        rel=\"stylesheet\"\n        href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap-grid.min.css\"\n      />\n      <div class=\"font-center\"> Feudle </div>\n      <input type= \"image\" src = {stat1} class=\"stat\"/>\n      <input type = \"image\" src = {setting} class = \"sett\"/>\n      <hr class=\"solid\" />\n      <div class=\"a\">\n        <Timer />{\" \"}\n        <button id=\"btn\" onClick={onOpenModal}>\n          Open Modal\n        </button>\n      </div>\n      <div class=\"b\">\n        <Box_player1 />\n      </div>\n      <div class=\"c\">\n        <Box_player2 />\n      </div>\n      <Keyboard />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/abhinildutt/Desktop/feudle-2.0/src/components/Board/Box_player1.js",[],[],"/Users/abhinildutt/Desktop/feudle-2.0/src/components/Board/Box_player2.js",[],[],"/Users/abhinildutt/Desktop/feudle-2.0/src/components/Timer/Timer.js",["53"],[],"/Users/abhinildutt/Desktop/feudle-2.0/src/components/Keyboard/Keyboard.js",["54","55","56","57","58","59","60","61","62","63","64","65","66","67","68"],[],"import React from \"react\";\nimport \"./Keyboard.css\";\nimport Key from \"./Key\";\nimport {Feudle} from \"../../logic/game.js\";\n\nconst Keyboard = () => {\n  var line = 1, box = 1;\n  var word = \"\";\n  const keyLayout = [\n    [\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\"],\n    [\"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\"], //backpace included here by default\n    [\"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"], //enter included on bottom by default\n  ];\n\n  const [keyInput, setKeyInput] = React.useState(\"\");\n\n  var game = new Feudle();\n  game.set_word(\"ALERT\");\n\n  const change_green = (line, box, num) => {\n    const s = num + \"line\" + line.toString() + \"box\" + box.toString();\n    document.getElementById(s).style.backgroundColor = \"#46a842\";\n  }\n  const change_yellow = (line, box, num) => {\n    const s = num + \"line\" + line.toString() + \"box\" + box.toString();\n    document.getElementById(s).style.backgroundColor = \"rgb(239, 187, 16)\";\n  }\n  const change_grey = (line, box, num) => {\n    const s = num + \"line\" + line.toString() + \"box\" + box.toString();\n    document.getElementById(s).style.backgroundColor = \"#5f6870\";\n  }\n\n\n  document.addEventListener(\"keyup\", function(event) {\n    switch (event.code) {\n        case \"Enter\":\n          if(word.length == 5) {\n            console.log(word);\n            game.guess(word);\n            var s = game.color(word);\n            for (var i = 0; i < s.length; i++) {\n\n              const s2 = \"line\" + line.toString() + \"box\" + (i+1).toString();\n\n              document.getElementById(s2).style.color = \"rgb(255, 255, 255)\";\n              document.getElementById(s2).style.border = \"0px solid black\";\n              document.getElementById(s2).style.margin = \"4px\";\n              document.getElementById(s2).style.fontSize = \"25px\";\n              document.getElementById(s2).style.height = \"8vh\";\n              document.getElementById(s2).style.width = \"4.5vw\";\n\n              if(s[i] == 'g') {\n                change_green(line,i+1,\"\");\n              }\n              if(s[i] == 'y') {\n                change_yellow(line,i+1,\"\");\n              }\n              if(s[i] == 'e') {\n                change_grey(line,i+1,\"\");\n              }\n            }\n\n            line++;\n            box = 1;\n            word = \"\";\n          }\n          else alert(\"Word must be 5 letters\")\n        case \"Backspace\" :\n          if(box > 1) box--;\n          var s = \"line\" + line.toString() + \"box\" + box.toString();\n          document.getElementById(s).innerHTML = `<div></div><br />`;\n          document.getElementById(s).style.border = \"0.1px solid black\";\n          document.getElementById(s).style.margin = \"4px\";\n          if(word.length != 0) word = word.slice(0,-1);\n          break;\n        default:\n          if(box <= 5) {\n            var s = \"line\" + line.toString() + \"box\" + box.toString();  \n            var keyValue = event.code.toUpperCase();\n            document.getElementById(s).innerHTML +=`<div>${keyValue[keyValue.length-1]}</div><br />`;\n            document.getElementById(s).style.border = \"2px solid black\";\n            document.getElementById(s).style.margin = \"4px\";\n            word += keyValue[keyValue.length-1].toUpperCase();\n          }\n          if(box <= 5) box++;\n          break;\n        }\n    }\n  );\n\n  const buttonPressHandler = (keyValue) => {\n    //set max length of input to 5\n    if(box <= 5) {\n      var s = \"line\" + line.toString() + \"box\" + box.toString();  \n      document.getElementById(s).innerHTML +=`<div>${keyValue.toUpperCase()}</div><br />`;\n      document.getElementById(s).style.border = \"2px solid black\";\n      document.getElementById(s).style.margin = \"4px\";\n      word += keyValue.toUpperCase();\n    }\n    if(box <= 5) box++;\n    \n  };\n\n  const backspaceHandler = () => {\n    if(box > 1) box--;\n    var s = \"line\" + line.toString() + \"box\" + box.toString();\n    document.getElementById(s).innerHTML = `<div></div><br />`;\n    document.getElementById(s).style.border = \"0.1px solid black\";\n    document.getElementById(s).style.margin = \"4px\";\n    if(word.length != 0) word = word.slice(0,-1);\n  };\n\n  const submitHandler = () => {\n    //submit only when input is 5 characters\n    if(word.length == 5) {\n      console.log(word);\n      game.guess(word);\n\n      var s = game.color(word);\n\n      for (var i = 0; i < s.length; i++) {\n\n        const s2 = \"line\" + line.toString() + \"box\" + (i+1).toString();\n\n        document.getElementById(s2).style.color = \"rgb(255, 255, 255)\";\n        document.getElementById(s2).style.border = \"0px solid black\";\n        document.getElementById(s2).style.margin = \"4px\";\n        document.getElementById(s2).style.fontSize = \"25px\";\n        document.getElementById(s2).style.height = \"8vh\";\n        document.getElementById(s2).style.width = \"4.5vw\";\n\n        if(s[i] == 'g') {\n          change_green(line,i+1,\"\");\n        }\n        if(s[i] == 'y') {\n          change_yellow(line,i+1,\"\");\n        }\n        if(s[i] == 'e') {\n          change_grey(line,i+1,\"\");\n        }\n      }\n\n      line++;\n      box = 1;\n      word = \"\";\n    }\n    else alert(\"Word must be 5 letters\")\n  };\n\n  const backspaceKey = (\n    <button type=\"button\" className=\"keyboard__key\" onClick={backspaceHandler}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"22\"\n        height=\"22\"\n        fill=\"currentColor\"\n        class=\"bi bi-backspace-fill\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path d=\"M15.683 3a2 2 0 0 0-2-2h-7.08a2 2 0 0 0-1.519.698L.241 7.35a1 1 0 0 0 0 1.302l4.843 5.65A2 2 0 0 0 6.603 15h7.08a2 2 0 0 0 2-2V3zM5.829 5.854a.5.5 0 1 1 .707-.708l2.147 2.147 2.146-2.147a.5.5 0 1 1 .707.708L9.39 8l2.146 2.146a.5.5 0 0 1-.707.708L8.683 8.707l-2.147 2.147a.5.5 0 0 1-.707-.708L7.976 8 5.829 5.854z\" />\n      </svg>\n    </button>\n  );\n\n  const enterKey = (\n    <button onClick={submitHandler} type=\"button\" className=\"keyboard__key\">\n      Enter\n    </button>\n  );\n\n  return (\n    <div className=\"keyboard\">\n      {/* <h5>{keyInput}</h5> Remove this later */}\n      <div className=\"keyboard__keys\">\n        <div>\n          {keyLayout[0].map((key) => (\n            <Key text={key} onPress={buttonPressHandler} />\n          ))}\n        </div>\n        <div>\n          {keyLayout[1].map((key) => (\n            <Key text={key} onPress={buttonPressHandler} />\n          ))}\n          {backspaceKey}\n        </div>\n        <div>\n          {keyLayout[2].map((key) => (\n            <Key text={key} onPress={buttonPressHandler} />\n          ))}\n          {enterKey}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Keyboard;\n","/Users/abhinildutt/Desktop/feudle-2.0/src/logic/game.js",["69","70","71","72","73","74"],[],"/Users/abhinildutt/Desktop/feudle-2.0/src/components/Keyboard/Key.js",[],[],{"ruleId":"75","severity":1,"message":"76","line":7,"column":10,"nodeType":"77","messageId":"78","endLine":7,"endColumn":19},{"ruleId":"75","severity":1,"message":"79","line":7,"column":21,"nodeType":"77","messageId":"78","endLine":7,"endColumn":24},{"ruleId":"75","severity":1,"message":"80","line":7,"column":26,"nodeType":"77","messageId":"78","endLine":7,"endColumn":29},{"ruleId":"75","severity":1,"message":"81","line":55,"column":12,"nodeType":"77","messageId":"78","endLine":55,"endColumn":31},{"ruleId":"82","severity":1,"message":"83","line":85,"column":11,"nodeType":"84","endLine":85,"endColumn":154},{"ruleId":"82","severity":1,"message":"85","line":101,"column":7,"nodeType":"84","endLine":101,"endColumn":56},{"ruleId":"82","severity":1,"message":"85","line":102,"column":7,"nodeType":"84","endLine":102,"endColumn":61},{"ruleId":"86","severity":1,"message":"87","line":111,"column":9,"nodeType":"84","messageId":"88","endLine":111,"endColumn":24},{"ruleId":"86","severity":1,"message":"89","line":114,"column":9,"nodeType":"84","messageId":"88","endLine":114,"endColumn":24},{"ruleId":"75","severity":1,"message":"90","line":1,"column":31,"nodeType":"77","messageId":"78","endLine":1,"endColumn":42},{"ruleId":"75","severity":1,"message":"91","line":15,"column":10,"nodeType":"77","messageId":"78","endLine":15,"endColumn":18},{"ruleId":"75","severity":1,"message":"92","line":15,"column":20,"nodeType":"77","messageId":"78","endLine":15,"endColumn":31},{"ruleId":"93","severity":1,"message":"94","line":37,"column":26,"nodeType":"95","messageId":"96","endLine":37,"endColumn":28},{"ruleId":"93","severity":1,"message":"94","line":52,"column":23,"nodeType":"95","messageId":"96","endLine":52,"endColumn":25},{"ruleId":"93","severity":1,"message":"94","line":55,"column":23,"nodeType":"95","messageId":"96","endLine":55,"endColumn":25},{"ruleId":"93","severity":1,"message":"94","line":58,"column":23,"nodeType":"95","messageId":"96","endLine":58,"endColumn":25},{"ruleId":"97","severity":1,"message":"98","line":68,"column":9,"nodeType":"99","messageId":"100","endLine":75,"endColumn":17},{"ruleId":"101","severity":1,"message":"102","line":70,"column":15,"nodeType":"77","messageId":"103","endLine":70,"endColumn":16},{"ruleId":"93","severity":1,"message":"104","line":74,"column":26,"nodeType":"95","messageId":"96","endLine":74,"endColumn":28},{"ruleId":"101","severity":1,"message":"102","line":78,"column":17,"nodeType":"77","messageId":"103","endLine":78,"endColumn":18},{"ruleId":"93","severity":1,"message":"104","line":110,"column":20,"nodeType":"95","messageId":"96","endLine":110,"endColumn":22},{"ruleId":"93","severity":1,"message":"94","line":115,"column":20,"nodeType":"95","messageId":"96","endLine":115,"endColumn":22},{"ruleId":"93","severity":1,"message":"94","line":132,"column":17,"nodeType":"95","messageId":"96","endLine":132,"endColumn":19},{"ruleId":"93","severity":1,"message":"94","line":135,"column":17,"nodeType":"95","messageId":"96","endLine":135,"endColumn":19},{"ruleId":"93","severity":1,"message":"94","line":138,"column":17,"nodeType":"95","messageId":"96","endLine":138,"endColumn":19},{"ruleId":"93","severity":1,"message":"94","line":21,"column":28,"nodeType":"95","messageId":"96","endLine":21,"endColumn":30},{"ruleId":"93","severity":1,"message":"94","line":39,"column":22,"nodeType":"95","messageId":"96","endLine":39,"endColumn":24},{"ruleId":"93","severity":1,"message":"94","line":51,"column":22,"nodeType":"95","messageId":"96","endLine":51,"endColumn":24},{"ruleId":"93","severity":1,"message":"104","line":57,"column":27,"nodeType":"95","messageId":"96","endLine":57,"endColumn":29},{"ruleId":"93","severity":1,"message":"94","line":57,"column":40,"nodeType":"95","messageId":"96","endLine":57,"endColumn":42},{"ruleId":"93","severity":1,"message":"94","line":64,"column":22,"nodeType":"95","messageId":"96","endLine":64,"endColumn":24},"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","'hover_change_source' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","<input> elements with type=\"image\" must have a text alternative through the `alt`, `aria-label`, or `aria-labelledby` prop.","react/jsx-pascal-case","Imported JSX component Box_player1 must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","Imported JSX component Box_player2 must be in PascalCase or SCREAMING_SNAKE_CASE","'buildStyles' is defined but never used.","'keyInput' is assigned a value but never used.","'setKeyInput' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-redeclare","'s' is already defined.","redeclared","Expected '!==' and instead saw '!='."]