[{"/Users/abhinildutt/Desktop/feudle-2.0/src/index.js":"1","/Users/abhinildutt/Desktop/feudle-2.0/src/App.js":"2","/Users/abhinildutt/Desktop/feudle-2.0/src/components/Board/Box_player1.js":"3","/Users/abhinildutt/Desktop/feudle-2.0/src/components/Timer/Timer.js":"4","/Users/abhinildutt/Desktop/feudle-2.0/src/components/Keyboard/Keyboard.js":"5","/Users/abhinildutt/Desktop/feudle-2.0/src/components/Keyboard/Key.js":"6","/Users/abhinildutt/Desktop/feudle-2.0/src/components/Board/Box_player2.js":"7","/Users/abhinildutt/Desktop/feudle-2.0/src/logic/game.js":"8"},{"size":212,"mtime":1653705537835,"results":"9","hashOfConfig":"10"},{"size":630,"mtime":1653820455057,"results":"11","hashOfConfig":"10"},{"size":923,"mtime":1653819045700,"results":"12","hashOfConfig":"10"},{"size":1148,"mtime":1653820053305,"results":"13","hashOfConfig":"10"},{"size":6552,"mtime":1654145106989,"results":"14","hashOfConfig":"10"},{"size":294,"mtime":1653819045701,"results":"15","hashOfConfig":"10"},{"size":964,"mtime":1654136262413,"results":"16","hashOfConfig":"10"},{"size":2114,"mtime":1654136756182,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1u50eha",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"21"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},"/Users/abhinildutt/Desktop/feudle-2.0/src/index.js",[],[],[],"/Users/abhinildutt/Desktop/feudle-2.0/src/App.js",["49","50"],[],"import \"./App.css\";\nimport Box_player1 from \"./components/Board/Box_player1.js\";\nimport Box_player2 from \"./components/Board/Box_player2.js\";\nimport Keyboard from \"./components/Keyboard/Keyboard\";\nimport Timer from \"./components/Timer/Timer\";\n\nfunction App() {\n  return (\n    <>\n      <link\n        href=\"https://fonts.googleapis.com/css2?family=Fredoka&display=swap\"\n        rel=\"stylesheet\"\n      ></link>\n      <div class=\"font-center\"> Feudle </div>\n      <hr class=\"solid\" />\n      <body>\n        <Timer />\n        <Box_player1 />\n        <Box_player2/>\n        <Keyboard />\n      </body>\n    </>\n  );\n}\n\nexport default App;\n","/Users/abhinildutt/Desktop/feudle-2.0/src/components/Board/Box_player1.js",[],[],"/Users/abhinildutt/Desktop/feudle-2.0/src/components/Timer/Timer.js",["51"],[],"import { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport React, { useState, useEffect } from \"react\";\nimport './Timer.css'\n\nconst Timer = () => {\n  const [time, setTime] = useState(0);\n  const [timerOn, setTimerOn] = useState(false);\n\n  useEffect(() => {\n    let interval = null;\n    if (timerOn) {\n      interval = setInterval(() => {\n        setTime((time) => time + 10);\n      }, 10);\n    } else {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [timerOn]);\n\n  const minutes = (\"0\" + Math.floor((time / 60000) % 60)).slice(-2);\n  const seconds = (\"0\" + Math.floor((time / 1000) % 60)).slice(-2);\n\n  const percentage = Math.round(((Math.floor((time / 1000) % 300)) / 300.0) * 100);\n\n  return (\n    <div class=\"timer-position\">\n      <CircularProgressbar value={percentage} text={minutes + \":\" + seconds} />\n      <button onClick={() => setTimerOn(true)}>Start</button>\n      <button onClick={() => setTimerOn(false)}>Stop</button>\n      <button onClick={() => setTime(0)}>Reset</button>\n    </div>\n  );\n};\n\nexport default Timer;","/Users/abhinildutt/Desktop/feudle-2.0/src/components/Keyboard/Keyboard.js",["52","53","54","55","56","57","58","59","60","61","62","63","64","65","66"],[],"import React from \"react\";\nimport \"./Keyboard.css\";\nimport Key from \"./Key\";\nimport {Feudle} from \"../../logic/game.js\";\n\nconst Keyboard = () => {\n  var line = 1, box = 1;\n  var word = \"\";\n  const keyLayout = [\n    [\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\"],\n    [\"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\"], //backpace included here by default\n    [\"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"], //enter included on bottom by default\n  ];\n\n  const [keyInput, setKeyInput] = React.useState(\"\");\n\n  var game = new Feudle();\n  game.set_word(\"ALERT\");\n\n  const change_green = (line, box, num) => {\n    const s = num + \"line\" + line.toString() + \"box\" + box.toString();\n    document.getElementById(s).style.backgroundColor = \"#46a842\";\n  }\n  const change_yellow = (line, box, num) => {\n    const s = num + \"line\" + line.toString() + \"box\" + box.toString();\n    document.getElementById(s).style.backgroundColor = \"rgb(239, 187, 16)\";\n  }\n  const change_grey = (line, box, num) => {\n    const s = num + \"line\" + line.toString() + \"box\" + box.toString();\n    document.getElementById(s).style.backgroundColor = \"#5f6870\";\n  }\n\n\n  document.addEventListener(\"keyup\", function(event) {\n    switch (event.code) {\n        case \"Enter\":\n          if(word.length == 5) {\n            console.log(word);\n            game.guess(word);\n            var s = game.color(word);\n            for (var i = 0; i < s.length; i++) {\n\n              const s2 = \"line\" + line.toString() + \"box\" + (i+1).toString();\n\n              document.getElementById(s2).style.color = \"rgb(255, 255, 255)\";\n              document.getElementById(s2).style.border = \"0px solid black\";\n              document.getElementById(s2).style.margin = \"4.5px\";\n              document.getElementById(s2).style.fontSize = \"25px\";\n              document.getElementById(s2).style.height = \"55px\";\n              document.getElementById(s2).style.width = \"59px\";\n\n              if(s[i] == 'g') {\n                change_green(line,i+1,\"\");\n              }\n              if(s[i] == 'y') {\n                change_yellow(line,i+1,\"\");\n              }\n              if(s[i] == 'e') {\n                change_grey(line,i+1,\"\");\n              }\n            }\n\n            line++;\n            box = 1;\n            word = \"\";\n          }\n          else alert(\"Word must be 5 letters\")\n        case \"Backspace\" :\n          if(box > 1) box--;\n          var s = \"line\" + line.toString() + \"box\" + box.toString();\n          document.getElementById(s).innerHTML = `<div></div><br />`;\n          document.getElementById(s).style.border = \"0.1px solid black\";\n          document.getElementById(s).style.margin = \"4px\";\n          if(word.length != 0) word = word.slice(0,-1);\n          break;\n        default:\n          if(box <= 5) {\n            var s = \"line\" + line.toString() + \"box\" + box.toString();  \n            var keyValue = event.code.toUpperCase();\n            document.getElementById(s).innerHTML +=`<div>${keyValue[keyValue.length-1]}</div><br />`;\n            document.getElementById(s).style.border = \"2px solid black\";\n            document.getElementById(s).style.margin = \"2.7px\";\n            word += keyValue[keyValue.length-1].toUpperCase();\n          }\n          if(box <= 5) box++;\n          break;\n        }\n    }\n  );\n\n  const buttonPressHandler = (keyValue) => {\n    //set max length of input to 5\n    if(box <= 5) {\n      var s = \"line\" + line.toString() + \"box\" + box.toString();  \n      document.getElementById(s).innerHTML +=`<div>${keyValue.toUpperCase()}</div><br />`;\n      document.getElementById(s).style.border = \"2px solid black\";\n      document.getElementById(s).style.margin = \"2.44px\";\n      word += keyValue.toUpperCase();\n    }\n    if(box <= 5) box++;\n    \n  };\n\n  const backspaceHandler = () => {\n    if(box > 1) box--;\n    var s = \"line\" + line.toString() + \"box\" + box.toString();\n    document.getElementById(s).innerHTML = `<div></div><br />`;\n    document.getElementById(s).style.border = \"0.1px solid black\";\n    document.getElementById(s).style.margin = \"4px\";\n    if(word.length != 0) word = word.slice(0,-1);\n  };\n\n  const submitHandler = () => {\n    //submit only when input is 5 characters\n    if(word.length == 5) {\n      console.log(word);\n      game.guess(word);\n\n      var s = game.color(word);\n\n      for (var i = 0; i < s.length; i++) {\n\n        const s2 = \"line\" + line.toString() + \"box\" + (i+1).toString();\n\n        document.getElementById(s2).style.color = \"rgb(255, 255, 255)\";\n        document.getElementById(s2).style.border = \"0px solid black\";\n        document.getElementById(s2).style.margin = \"4.5px\";\n        document.getElementById(s2).style.fontSize = \"25px\";\n        document.getElementById(s2).style.height = \"55px\";\n        document.getElementById(s2).style.width = \"59px\";\n\n        if(s[i] == 'g') {\n          change_green(line,i+1,\"\");\n        }\n        if(s[i] == 'y') {\n          change_yellow(line,i+1,\"\");\n        }\n        if(s[i] == 'e') {\n          change_grey(line,i+1,\"\");\n        }\n      }\n\n      line++;\n      box = 1;\n      word = \"\";\n    }\n    else alert(\"Word must be 5 letters\")\n  };\n\n  const backspaceKey = (\n    <button type=\"button\" className=\"keyboard__key\" onClick={backspaceHandler}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"22\"\n        height=\"22\"\n        fill=\"currentColor\"\n        class=\"bi bi-backspace-fill\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path d=\"M15.683 3a2 2 0 0 0-2-2h-7.08a2 2 0 0 0-1.519.698L.241 7.35a1 1 0 0 0 0 1.302l4.843 5.65A2 2 0 0 0 6.603 15h7.08a2 2 0 0 0 2-2V3zM5.829 5.854a.5.5 0 1 1 .707-.708l2.147 2.147 2.146-2.147a.5.5 0 1 1 .707.708L9.39 8l2.146 2.146a.5.5 0 0 1-.707.708L8.683 8.707l-2.147 2.147a.5.5 0 0 1-.707-.708L7.976 8 5.829 5.854z\" />\n      </svg>\n    </button>\n  );\n\n  const enterKey = (\n    <button onClick={submitHandler} type=\"button\" className=\"keyboard__key\">\n      Enter\n    </button>\n  );\n\n  return (\n    <div className=\"keyboard\">\n      {/* <h5>{keyInput}</h5> Remove this later */}\n      <div className=\"keyboard__keys\">\n        <div>\n          {keyLayout[0].map((key) => (\n            <Key text={key} onPress={buttonPressHandler} />\n          ))}\n        </div>\n        <div>\n          {keyLayout[1].map((key) => (\n            <Key text={key} onPress={buttonPressHandler} />\n          ))}\n          {backspaceKey}\n        </div>\n        <div>\n          {keyLayout[2].map((key) => (\n            <Key text={key} onPress={buttonPressHandler} />\n          ))}\n          {enterKey}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Keyboard;\n","/Users/abhinildutt/Desktop/feudle-2.0/src/components/Keyboard/Key.js",[],[],"/Users/abhinildutt/Desktop/feudle-2.0/src/components/Board/Box_player2.js",[],[],[],"/Users/abhinildutt/Desktop/feudle-2.0/src/logic/game.js",["67","68","69","70","71","72"],[],"export class Feudle {\n    constructor() {\n        this._word = \"\";\n        this._guess = \"\";\n        this._total_gusses = 6;\n        this._guesses = 0;\n        let alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n        this._letter_map = new Map();\n        for (let i = 0; i < alphabet.length; i++) {\n            this._letter_map.set(alphabet[i], {\n                guessed: false,\n                in_word: false,\n                in_position: false\n            });\n        }\n    }\n    set_word(word) {\n        this._word = word.toUpperCase();\n    }\n    check_win() {\n        return this._guess == this._word;\n    }\n    check_lose() {\n        return this._guesses >= this._total_gusses;\n    }\n    guess(guess) {\n        this._guess = guess.toUpperCase();\n        for (let i = 0; i < this._guess.length; i++) {\n            let char = this._guess.charAt(i);\n            if (this._letter_map.has(char)) {\n                this._letter_map.get(char).guessed = true;\n                if (this._word.includes(char)) {\n                    this._letter_map.get(char).in_word = true;\n                }\n            }\n        }\n        for (let i = 0; i < this._guess.length; i++) {\n            let char = this._guess.charAt(i);\n            if (char == this._word.charAt(i)) {\n                this._letter_map.get(char).in_position = true;\n            }\n        }\n        this._guesses++;\n        return this.check_win();\n    }\n    color(guess) {\n        var color = \"\";\n        for (let i = 0; i < this._guess.length; i++) {\n            let char = this._guess.charAt(i);\n            var flag = 0;\n            if (char == this._word.charAt(i)) {\n                color += \"g\";\n                flag = 1;\n            }\n            else {\n                for (let j = 0; j < this._guess.length; j++) {\n                    if (i != j && char == this._word.charAt(j)) {\n                        color += \"y\";\n                        flag = 1;\n                        break;\n                    }\n                }\n            }\n            if (flag == 0) {\n                color += \"e\";\n            }\n        }\n        return color;\n    }\n}\n\n",[],{"ruleId":"73","severity":1,"message":"74","line":18,"column":9,"nodeType":"75","messageId":"76","endLine":18,"endColumn":24},{"ruleId":"73","severity":1,"message":"77","line":19,"column":9,"nodeType":"75","messageId":"76","endLine":19,"endColumn":23},{"ruleId":"78","severity":1,"message":"79","line":1,"column":31,"nodeType":"80","messageId":"81","endLine":1,"endColumn":42},{"ruleId":"78","severity":1,"message":"82","line":15,"column":10,"nodeType":"80","messageId":"81","endLine":15,"endColumn":18},{"ruleId":"78","severity":1,"message":"83","line":15,"column":20,"nodeType":"80","messageId":"81","endLine":15,"endColumn":31},{"ruleId":"84","severity":1,"message":"85","line":37,"column":26,"nodeType":"86","messageId":"87","endLine":37,"endColumn":28},{"ruleId":"84","severity":1,"message":"85","line":52,"column":23,"nodeType":"86","messageId":"87","endLine":52,"endColumn":25},{"ruleId":"84","severity":1,"message":"85","line":55,"column":23,"nodeType":"86","messageId":"87","endLine":55,"endColumn":25},{"ruleId":"84","severity":1,"message":"85","line":58,"column":23,"nodeType":"86","messageId":"87","endLine":58,"endColumn":25},{"ruleId":"88","severity":1,"message":"89","line":68,"column":9,"nodeType":"90","messageId":"91","endLine":75,"endColumn":17},{"ruleId":"92","severity":1,"message":"93","line":70,"column":15,"nodeType":"80","messageId":"94","endLine":70,"endColumn":16},{"ruleId":"84","severity":1,"message":"95","line":74,"column":26,"nodeType":"86","messageId":"87","endLine":74,"endColumn":28},{"ruleId":"92","severity":1,"message":"93","line":78,"column":17,"nodeType":"80","messageId":"94","endLine":78,"endColumn":18},{"ruleId":"84","severity":1,"message":"95","line":110,"column":20,"nodeType":"86","messageId":"87","endLine":110,"endColumn":22},{"ruleId":"84","severity":1,"message":"85","line":115,"column":20,"nodeType":"86","messageId":"87","endLine":115,"endColumn":22},{"ruleId":"84","severity":1,"message":"85","line":132,"column":17,"nodeType":"86","messageId":"87","endLine":132,"endColumn":19},{"ruleId":"84","severity":1,"message":"85","line":135,"column":17,"nodeType":"86","messageId":"87","endLine":135,"endColumn":19},{"ruleId":"84","severity":1,"message":"85","line":138,"column":17,"nodeType":"86","messageId":"87","endLine":138,"endColumn":19},{"ruleId":"84","severity":1,"message":"85","line":21,"column":28,"nodeType":"86","messageId":"87","endLine":21,"endColumn":30},{"ruleId":"84","severity":1,"message":"85","line":39,"column":22,"nodeType":"86","messageId":"87","endLine":39,"endColumn":24},{"ruleId":"84","severity":1,"message":"85","line":51,"column":22,"nodeType":"86","messageId":"87","endLine":51,"endColumn":24},{"ruleId":"84","severity":1,"message":"95","line":57,"column":27,"nodeType":"86","messageId":"87","endLine":57,"endColumn":29},{"ruleId":"84","severity":1,"message":"85","line":57,"column":40,"nodeType":"86","messageId":"87","endLine":57,"endColumn":42},{"ruleId":"84","severity":1,"message":"85","line":64,"column":22,"nodeType":"86","messageId":"87","endLine":64,"endColumn":24},"react/jsx-pascal-case","Imported JSX component Box_player1 must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Box_player2 must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'buildStyles' is defined but never used.","Identifier","unusedVar","'keyInput' is assigned a value but never used.","'setKeyInput' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-redeclare","'s' is already defined.","redeclared","Expected '!==' and instead saw '!='."]